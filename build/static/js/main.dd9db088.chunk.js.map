{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Option","selected","label","value","onChange","className","onClick","indexOf","concat","arr","filter","ele","remove","logResults","improve","impact","comments","xhr","XMLHttpRequest","addEventListener","console","log","responseText","send","i","length","key","open","setRequestHeader","encodeURI","App","useState","count","setCount","step","setStep","setSelected","improveText","setImproveText","impactText","setImpactText","commentText","setCommentText","result","data","updateData","useEffect","a","JSON","parse","headers","mapped","j","fetchData","useRemote","reset","options","short","forEach","option","resultMax","titles","content","map","idx","style","width","type","e","target","marginTop","href","disabled","Fragment","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.dd9db088.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction remove(arr, value) {\n  return arr.filter(function (ele) { return ele !== value; });\n}\n\nfunction Option({ selected, label, value, onChange }) {\n  return (\n    <div\n      className=\"OptionBar\"\n      onClick={() => {\n        if (selected.indexOf(value) === -1) {\n          onChange(selected.concat(value));\n        } else {\n          onChange(remove(selected, value));\n        }\n      }}\n    >\n      <span className=\"OptionCheckBack\">\n        {selected.indexOf(value) >= 0 && (\n          <span className=\"OptionCheckmark\" />\n        )}\n      </span>\n      <span className=\"OptionLabel\">{label}</span>\n    </div>\n  );\n}\n\nfunction logResults(selected, improve, impact, comments) {\n  const xhr = new XMLHttpRequest()\n\n  xhr.addEventListener('load', () => {\n    console.log(xhr.responseText);\n  })\n  let send = '';\n  for (let i = 0; i < selected.length; ++i) {\n    if (send.length) { send += '&'; }\n    const key = selected[i];\n    send += `${key}=X`;\n  }\n  xhr.open('POST', 'https://script.google.com/macros/s/AKfycbxa64QC-IFGT6juCZ3odQp3B_OAUSCbgZvsMZ1y/exec');\n  xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n  xhr.send(`${send}&improvements=${encodeURI(improve)}&impact=${encodeURI(impact)}&comments=${encodeURI(comments)}`);\n}\n\nfunction useRemote(count) {\n  const [data, updateData] = useState({});\n\n  useEffect(() => {\n    async function fetchData() {\n      const xhr = new XMLHttpRequest()\n      xhr.addEventListener('load', () => {\n        const { headers, data } = JSON.parse(xhr.responseText);\n        let mapped = {};\n\n        for (let i = 0; i < data.length; ++i) {\n          for (let j = 0; j < headers.length; ++j) {\n            if (data[i][j] === 'X') {\n              mapped[headers[j]] = mapped[headers[j]] ? mapped[headers[j]] + 1 : 1;\n            }\n          }\n        }\n\n        console.log(\"Data\", mapped);\n        updateData(mapped);\n      })\n      xhr.open('GET', 'https://script.google.com/macros/s/AKfycbxa64QC-IFGT6juCZ3odQp3B_OAUSCbgZvsMZ1y/exec');\n      xhr.send();\n    }\n    fetchData();\n  }, [count]);\n\n  return data;\n}\n\nfunction App() {\n  const [count, setCount] = useState(1);\n  const [step, setStep] = useState(0);\n  const [selected, setSelected] = useState([]);\n\n  const [improveText, setImproveText] = useState('');\n  const [impactText, setImpactText] = useState('');\n  const [commentText, setCommentText] = useState('');\n  const result = useRemote(count);\n\n  const reset = (comments) => {\n    if (comments) {\n      logResults(selected, improveText, impactText, commentText);\n    } else {\n      logResults(selected, '', '', '');\n    }\n    setStep(0);\n    setSelected([]);\n    setImproveText('');\n    setImpactText('');\n    setCommentText('');\n  };\n\n  const options = [\n    { value: 'publicTrans', label: 'Take public transportation more often.', short: 'Public transportation' },\n    { value: 'walkBike', label: 'Walk and ride your bike more often.', short: 'Walk/Bike' },\n    { value: 'carpool', label: 'Carpool when possible.', short: 'Carpool' },\n    { value: 'limitGas', label: 'Limit the time spent driving your gas-powered vehicle.', short: 'Limit gas vehicle use' },\n    { value: 'recycle', label: 'Reduce, reuse, recycle.', short: 'Reduce, reuse, recycle' },\n    { value: 'localProduce', label: 'Purchase local produce.', short: 'Local produce' },\n    { value: 'localMeat', label: 'Purchase local dairy and meat products.', short: 'Local dairy + meat' },\n    { value: 'idleFree', label: 'Be idle free.', short: 'Be idle free' },\n    { value: 'burnWood', label: 'Stop burning wood in fireplaces.', short: 'Avoid wood burning' },\n    { value: 'tellFriends', label: 'Tell your friends and legislators.', short: 'Friends + legislators' },\n    { value: 'unplug', label: 'Unplug devices when not being used.', short: 'Unplug devices' },\n    { value: 'weatherproof', label: 'Weatherproof your home.', short: 'Weatherproof home' },\n    { value: 'adjustTemp', label: 'Adjust your thermostat to 68° in the winter and 78° in the summer.', short: 'Adjust thermostat' },\n    { value: 'eatMeatless', label: 'Eat meatless meals one day a week.', short: 'Meatless meals' },\n  ];\n\n  const mapped = {};\n  options.forEach(option => { mapped[option.value] = option; });\n\n  let resultMax = 1;\n  for (let i = 0; i < options.length; ++i) {\n    if (result[options[i].value] > resultMax) { resultMax = result[options[i].value]; }\n  }\n\n  const titles = [\n    <span>How Will you help<br />clear the air?</span>,\n    <span>Pledge to help clear the air</span>,\n    <span>I Pledge to...</span>,\n    <span>Community Pledging<br/></span>,\n    <span>Feedback</span>\n  ];\n\n  const content = [\n    <div className=\"QuestionB\">Pledge ways that you will help improve air quality in your community</div>,\n    <div className=\"\">\n      <div className=\"ChooseThree\">Choose 3 or more options</div>\n      {options.map(option =>\n        <Option\n          onChange={setSelected}\n          selected={selected}\n          key={option.value}\n          {...option}\n        />\n      )}\n    </div>,\n    <div className=\"\">\n      {selected.map((value, idx) => (\n        <div className=\"PledgeLine\" key={value}>\n          <span className=\"PledgePoint\">{idx + 1}.</span>{mapped[value].label}\n        </div>\n      ))}\n      <div className=\"ToHelp\">...To help clear the air!</div>\n    </div>,\n    <div className=\"Community\">\n      {options.map(option => (\n        <div className=\"CommunityRow\" key={option.value}>\n          <span className=\"CommunityItem\">{option.short}</span>\n          <span\n            className=\"CommunityBar\"\n            style={{ width: (200 / resultMax) * result[option.value] || 2}}\n          />\n          <span className=\"CommunityCount\">{result[option.value] || 0}</span>\n        </div>\n      ))}\n    </div>,\n    <div className=\"SurveyBody\">\n      We would love your feedback on our project so we can help improve the experience in the future.\n      <br /><br />\n      How could the app's functionality be improved?\n      <br />\n      <input\n        type=\"text\"\n        className=\"SurveyText\"\n        onChange={e => setImproveText(e.target.value)}\n        value={improveText}\n      />\n      <br />\n      How does this impact your view on air quality?\n      <br />\n      <input\n        type=\"text\"\n        className=\"SurveyText\"\n        onChange={e => setImpactText(e.target.value)}\n        value={impactText}\n      />\n      <br />\n      Comments\n      <br />\n      <input\n        type=\"text\"\n        className=\"SurveyText\"\n        onChange={e => setCommentText(e.target.value)}\n        value={commentText}\n      />\n      <br />\n    </div>\n  ];\n\n  return (\n    <div className=\"App\">\n      <div className=\"Content\">\n        <div className=\"Title\">Air Quality Pledge</div>\n        <div className=\"Main\">\n          <div\n            className=\"Question\"\n            style={{ marginTop:\n                step === 3 ? -80 : 0 }}\n          >\n            {titles[step]}\n          </div>\n          {content[step] || 'None'}\n        </div>\n        <div className=\"Navigation\">\n          {step === 0 ? (\n            <button\n              href=\"#\"\n              className=\"ActionButton\"\n              onClick={() => {\n                setCount(count + 1);\n                setStep(1);\n              }}\n            >\n              Take the Pledge\n            </button>\n          ) : step === 1 ? (\n            <button\n              href=\"#\"\n              className=\"ActionButton OptionSubmit\"\n              onClick={() => setStep(2)}\n              disabled={selected.length < 3}\n            >\n              Submit\n            </button>\n          ) : step === 2 ? (\n            <React.Fragment>\n              <div className=\"RightAlignButton\">\n                <button\n                  href=\"#\"\n                  className=\"SmallActionButton\"\n                  onClick={() => setStep(3)}\n                >\n                  Next\n                </button>\n              </div>\n            </React.Fragment>\n          ) : step === 3 ? (\n            <React.Fragment>\n              <div className=\"RightAlignButton\">\n                <button\n                  href=\"#\"\n                  className=\"SmallActionButton\"\n                  onClick={() => setStep(4)}\n                >\n                  Finish and provide feedback\n                </button>\n              </div>\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              <button\n                href=\"#\"\n                className=\"SmallActionUnderline\"\n                onClick={() => reset(true)}\n              >\n                Submit\n              </button>\n              <button\n                href=\"#\"\n                className=\"SmallActionButton\"\n                onClick={() => reset()}\n              >\n                Skip\n              </button>\n            </React.Fragment>\n        )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}